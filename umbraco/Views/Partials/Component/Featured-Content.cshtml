@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
	var homePage = CurrentPage.Site();
	var settings = homePage.FirstChild("Settings");
	int count = 0;
	var list = CurrentPage.featuredContent;
}

@foreach( var id in list.Split(',') )
{
	var item = Umbraco.Content(id);
	string docType = item.DocumentTypeAlias;

	switch(docType)
	{
		case "LatestNews":
			@LatestNews(item, count)
		break;
		case "Announcement":
			@Announcement(item)
		break;
		case "Event":
			@Event(item)
		break;
		case "GeneralNews":
			@NewsArticle(item)
		break;
		case "PressRelease":
			@NewsArticle(item)
		break;
		case "InTheMedia":
			@NewsArticle(item)
		break;
		default:
			@Default(item)
		break;
	}
	if( docType == "LatestNews" ){
		count = count + 1;
	}
}

@helper LatestNews(dynamic item, int count)
{
	var homePage = item.Site();
	var news = homePage.FirstChild("News");
	var article = news.Children().OrderBy("ReleaseDate desc").Skip(count).Take(1);
	var color = "bondi-blue";

	if( article[0].HasValue("color") )
	{
		color = article[0].color.ToLower().Replace(" ","-");
	}

	if( article[0].Name != "" )
	{
		<article class="o-card o-card--news o-card--fill">
			<div class="o-card__image--wrap @color">
			</div>
			<div class="o-card__content">
				<span class="o-card-info--category o-card-info--category--news">News</span>
				<h3 class="o-card__heading o-card__heading--news delta">@(article[0].HasValue("postTitle") ? article[0].postTitle : article[0].Name)</h3>
				<span class="o-card-info--date o-card-info--date--news">@article[0].releaseDate.ToString("dd MMM")</span>
			</div>
			<a href="@article[0].Url" class="o-card-link"></a>
			<div class="o-card__actions">
				<a href="@article[0].Url" class="o-button o-button--small o-button--transparent">Read more</a>
			</div>

		</article>
	}

}

@helper Announcement(dynamic item)
{
	var announcement = item;
	var color = "bondi-blue";
	var cardType = "o-card--fill";
	if( announcement.HasValue("backgroundImage") )
	{
		cardType = "o-card--image";
	}
	if( announcement.HasValue("color") )
	{
		color = announcement.color.ToLower().Replace(" ","-");
	}
	if( announcement.Name != "" )
	{
		<article class="o-card o-card--event @cardType">
			<div class="o-card__image--wrap @color">
			@if( announcement.HasValue("backgroundImage") )
			{
				<img class="o-card__image" src="@Umbraco.Media(announcement.backgroundImage).GetCropUrl("umbracoFile", "gallery")" alt="@announcement.title"/>
			}
			</div>
			<div class="o-card__content">
				<span class="o-card-info o-card-info--category o-card-info--category--announcement">@announcement.mainlabel</span>
				<h3 class="o-card__heading o-card__heading--announcement delta">@announcement.title</h3>
				<span class="o-card-info o-card-info--date o-card-info--date--announcement">@announcement.secondaryLabel</span>
			</div>
			<a href="@announcement.link.url" class="o-card-link"></a>
			<div class="o-card__actions">
				<a href="@announcement.link.url" class="o-button o-button--small o-button--transparent">@announcement.buttonText</a>
			</div>

		</article>
	}
}

@helper Event(dynamic item)
{
	var type = "";
	var ci = new System.Globalization.CultureInfo("en-GB");
	System.Threading.Thread.CurrentThread.CurrentCulture = ci;
	System.Threading.Thread.CurrentThread.CurrentUICulture = ci;
    var now = DateTime.Today;

	var eventId = item.Id;
	var imageId = item.tileImage.ToString();

	string imageUrl = ( imageId != "" ? Umbraco.Media( imageId ).GetCropUrl("umbracoFile", "gallery") : "" );

	var category = item.Parent().Name;
	var count = 0;
	var multidate = item.multidate;

	foreach( var date in multidate ){
	    count = count + 1;
	}

	int last = count - 1;

	<article class="o-card o-card--event o-card--image">
		<div class="o-card__image--wrap">
			@if( item.HasValue("tileImage") )
			{
				<img class="o-card__image" src="@imageUrl" alt="@item.Name"/>
			}

		</div>
		<div class="o-card__content">
			<span class="o-card-info o-card-info--category o-card-info--category--event">@category</span>
			<h3 class="o-card__heading o-card__heading--event">@item.title</h3>
			<span class="o-card-info o-card-info--date o-card-info--date--event">
                @if( multidate.ToString() != "" ){
                    <span class="o-info-block__field o-info-block__field--date">
                        @if( count > 1 ){
                            if( @DateTime.Parse( multidate[0].date.value.ToString()  ).ToString("d MMM") != @DateTime.Parse( multidate[last].date.value.ToString()  ).ToString("d MMM") ){
                                @DateTime.Parse( multidate[0].date.value.ToString()  ).ToString("d MMM") <span>-</span> @DateTime.Parse( multidate[last].date.value.ToString()  ).ToString("d MMM")
                            } else {
                                @DateTime.Parse( multidate[0].date.value.ToString()  ).ToString("d MMM")
                            }
                        } else {
                            @DateTime.Parse( multidate[0].date.value.ToString()  ).ToString("d MMM")
                        }

                    </span>
                }
			</span>
		</div>
		<a href="@item.url" class="o-card-link safe-ajax-js" data-template="EventAJAX"></a>
		<div class="o-card__actions o-card__actions--event">
			<a href="@item.Url#tickets" class="o-button o-button--small o-button--transparent">Buy tickets</a>
			<a href="@item.Url" class="o-button o-button--small o-button--transparent safe-ajax-js" data-template="EventAJAX">More info</a>
		</div>

	</article>
}

@helper NewsArticle(dynamic item)
{
	var color = "bondi-blue";

	if( item.HasValue("color") )
	{
		color = item.color.ToLower().Replace(" ","-");
	}

	if( item.Name != "" )
	{
		<article class="o-card o-card--news o-card--fill">
			<div class="o-card__image--wrap @color">
			</div>
			<div class="o-card__content">
				<span class="o-card-info--category o-card-info--category--news">News</span>
				<h3 class="o-card__heading o-card__heading--news delta">@(item.HasValue("postTitle") ? item.postTitle : item.Name)</h3>
				<span class="o-card-info--date o-card-info--date--news">@item.releaseDate.ToString("dd MMM")</span>
			</div>
			@if( item.DocumentTypeAlias == "InTheMedia" )
			{
				<a href="@item.articleUrl" target="_blank" class="o-card-link"></a>
				<div class="o-card__actions">
					<a href="@item.articleUrl" target="_blank" class="o-button o-button--small o-button--transparent">Read more</a>
				</div>
			}
			else
			{
				<a href="@item.Url" class="o-card-link"></a>
				<div class="o-card__actions">
					<a href="@item.Url" class="o-button o-button--small o-button--transparent">Read more</a>
				</div>
			}
		</article>
	}
}

@helper Default(dynamic item)
{

}

@helper Truncate (string input, int length)
{
    if( input.Length<=length )
    {
        @Html.Raw(input)
    }
    else{
        @Html.Raw( input.Substring( 0,length ) )<text>...</text>
    }
}
