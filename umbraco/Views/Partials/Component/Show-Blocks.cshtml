@inherits Umbraco.Web.Mvc.UmbracoViewPage
@{
	var selection = Model.GetPropertyValue<IEnumerable<IPublishedContent>>("pageBlocks");
	var count = 1;
}


@foreach( var item in selection )
{
	string docType = item.DocumentTypeAlias;

	switch(docType)
	{
		case "CastBlock":
			@CastBlock(item, count)
		break;
		case "ImageBlock":
			@ImageBlock(item, count)
		break;
		case "ReviewsBlock":
			@ReviewsBlock(item, count)
		break;
		case "VideoBlock":
			@VideoBlock(item, count)
		break;
		default:
			@Default(item, count)
		break;
	}
	count = count + 1;
}

@helper CastBlock(IPublishedContent item, int count)
{
	var title = item.GetPropertyValue("title");
	var cast = item.GetPropertyValue<IEnumerable<IPublishedContent>>("cast");

	<div class="o-section o-section--dark-grey o-section--window o-wrap">
		<a href="#@title.ToString().ToLower().Replace(" ", "")" class="link-next">
			<i class="ico-arrow ico-arrow--down"></i>
		</a>
		<span id="@title.ToString().ToLower().Replace(" ", "")" class="anchor-offset"></span>
		<div class="o-wrap o-wrap--medium">
			<h2 class="mega">@title</h2>
			<div class="o-cards-wrap o-cards-cast clearfix">
				@foreach( var person in cast )
				{
					var name = person.GetPropertyValue("title");
					var subtitle = person.GetPropertyValue("subtitle");

					var picture = person.GetPropertyValue("picture");
					var imageUrl = "";
					if( person.HasValue("picture") && person.GetPropertyValue("picture").ToString() != "" )
					{
						imageUrl = Umbraco.Media(picture.ToString()).GetCropUrl("umbracoFile", "profile-pic");
					}
					<div class="o-card-person clearfix">
						<div class="o-card-person__image">
							<img src="@imageUrl" alt="@name">
						</div>
						<div class="o-card-person__info">
							<span class="o-card-person__title delta">@name</span>
							<span class="o-card-person__subtitle clearfix">@subtitle</span>
						</div>
					</div>
				}
			</div>
		</div>

	</div>
}

@helper ImageBlock(IPublishedContent item, int count)
{
	var title = item.GetPropertyValue("title");
	var background = item.GetPropertyValue("image");
	var backgroundUrl = "";
	if( item.HasValue("image") && item.GetPropertyValue("image").ToString() != "" )
	{
		backgroundUrl = Umbraco.Media(background.ToString()).GetCropUrl("umbracoFile", "image-cover");
	}
	<div class="o-section o-section--window o-section--image" style="background: url(@backgroundUrl) no-repeat center center; background-size: cover;">
		<a href="#@title.ToString().ToLower().Replace(" ", "")" class="link-next">
			<i class="ico-arrow ico-arrow--down"></i>
		</a>
		<span id="@title.ToString().ToLower().Replace(" ", "")" class="anchor-offset"></span>
		<h2 class="hide-text">@title</h2>

	</div>
}

@helper ReviewsBlock(IPublishedContent item, int count)
{
	var title = item.GetPropertyValue("title");
	var reviews = item.GetPropertyValue<IEnumerable<IPublishedContent>>("reviews");

	if( title == null )
	{
		title = "Reviews";
	}

	<div class="o-section o-section--dark-terra-cota o-section--window">
		<a href="#@title.ToString().ToLower().Replace(" ", "")" class="link-next">
			<i class="ico-arrow ico-arrow--down"></i>
		</a>
		<span id="@title.ToString().ToLower().Replace(" ", "")" class="anchor-offset"></span>
		<div class="o-wrap o-wrap--small">
			<h2 class="mega">Reviews</h2>
			@if( item.HasValue("reviews") && item.GetPropertyValue<IEnumerable<IPublishedContent>>("reviews").ToString() != "" )
			{
				<div class="o-card-reviews-wrap">
					@foreach( var review in reviews )
					{
						int starRating = Convert.ToInt32(review.GetPropertyValue("starRating"));
						var comment = review.GetPropertyValue("review");
						var source = review.GetPropertyValue("source");
						<div class="o-card-review">
							<div class="o-card-review__rating gamma">
								@for( var ii = 0; ii < starRating; ii++ )
								{
									<i class="ico-star"></i>
								}
							</div>
							<span class="o-card-review__review beta">@comment</span>
							@source
						</div>
					}
				</div>
			}

		</div>
	</div>
}

@helper VideoBlock(IPublishedContent item, int count)
{

	var title = item.GetPropertyValue("title");
	var video = item.GetPropertyValue<MvcHtmlString>("video");

	var background = item.GetPropertyValue("backgroundImage");
	var backgroundUrl = "";
	if( item.HasValue("backgroundImage") && item.GetPropertyValue("backgroundImage").ToString() != "" )
	{
		backgroundUrl = Umbraco.Media(background.ToString()).GetCropUrl("umbracoFile", "image-cover");
	}

	<div class="o-section o-section--video o-section--window" >
		<a href="#@title.ToString().ToLower().Replace(" ", "")" class="link-next">
			<i class="ico-arrow ico-arrow--down"></i>
		</a>
		<span id="@title.ToString().ToLower().Replace(" ", "")" class="anchor-offset"></span>
		<h2 class="hide-text">Video</h2>
		<div class="o-video__controls video-controls-js" style="background: url(@backgroundUrl) no-repeat center center; background-size: cover;">
			<div class="o-video__controls-wrap">
				<span class="o-video__controls__title">
					<span>Play video</span>
				</span>
				<span class="o-video__controls__button o-button o-button--primary">
					<i class="ico-arrow--right"></i>
				</span>
			</div>
		</div>
		@video
	</div>
}

@helper Default(IPublishedContent item, int count)
{

}
