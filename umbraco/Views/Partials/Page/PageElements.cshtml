@inherits Umbraco.Web.Mvc.UmbracoViewPage
@{
	var selection = Model.GetPropertyValue<IEnumerable<IPublishedContent>>("mainContent");
	}

@foreach( var item in selection )
{
	string docType = item.DocumentTypeAlias;

	switch(docType)
	{
		case "Quote":
			@Quote(item)
		break;
		case "Textarea":
			@Textarea(item)
		break;
		case "WideImage":
			@WideImage(item)
		break;
		case "Gallery":
			@Gallery(item)
		break;
		case "ImageWithText":
			@ImageWithText(item)
		break;
		case "TabbedContent":
			@TabbedContent(item)
		break;
		default:
			@Default(item)
		break;
	}
}

@helper Quote(IPublishedContent item)
{
	var quote = item.GetPropertyValue("quote");
	var source = item.GetPropertyValue("source");

	var wrap = "";

	if( Model.Level == 2 )
	{
	    wrap = "";
	}

	if( quote != null )
	{
		<div class="c-page-block c-page-block--quote @wrap">

			<blockquote>
				@quote
				<footer>
					<cite>
						<span>&mdash;</span> @source
					</cite>
				</footer>
			</blockquote>
		</div>
	}

}

@helper WideImage(IPublishedContent item)
{
    var image = item.GetPropertyValue("image");
    var title = item.GetPropertyValue("title");
	var wrap = "";

	if( Model.Level == 2 )
	{
	    wrap = "";
	}

	if( image != null )
	{
		<div class="c-page-block c-page-block--wide-image @wrap">
			@if( title != null && title.ToString() != "" )
			{
			    <h2>@title</h2>
			}
			@if( image != null )
			{
				var cropUrl = Umbraco.Media(image.ToString()).GetCropUrl("umbracoFile", "image-cover");
				var caption = Umbraco.Media(image.ToString()).caption;
				var altText = Umbraco.Media(image.ToString()).altText;

			    <figure>
			        <img src="@cropUrl" alt="@altText">
			        @if ( caption != "" )
			        {
			            <figcaption>@caption</figcaption>
			        }

			    </figure>
			}
		</div>
	}

}

@helper Gallery(IPublishedContent item)
{
	var gallery = item.GetPropertyValue("gallery");
	var galleryCaption = item.GetPropertyValue("caption");
    var title = item.GetPropertyValue("title");
	var wrap = "";

	if( Model.Level == 2 )
	{
	    wrap = "";
	}

	if ( gallery != null )
	{
		<div class="c-page-block c-page-block--gallery @wrap js-magnific-gallery">
			@if( title != null && title.ToString() != "" )
			{
			    <h2>@title</h2>
			}
			<figure class="clearfix">
				@foreach( var id in gallery.ToString().Split(',') )
			    {
			    	var imageUrl = Umbraco.Media(id.ToString()).Url;
			    	var cropUrl = Umbraco.Media(id.ToString()).GetCropUrl("umbracoFile", "gallery");
					var caption = Umbraco.Media(id.ToString()).caption;
					var altText = Umbraco.Media(id.ToString()).altText;

			        <a class="c-gallery__thumbnail" href="@imageUrl?width=1200" title="@altText">
			        	<img src="@cropUrl" alt="@altText">
			        </a>
			    }
		        @if ( galleryCaption != "" )
		        {
		            <figcaption>@galleryCaption</figcaption>
		        }
		    </figure>
		</div>
	}
}

@helper Textarea(IPublishedContent item)
{
	var content = item.GetPropertyValue("content");
	var wrap = "";

	if( Model.Level == 2 )
	{
	    wrap = "";
	}

	<div class="c-page-block c-page-block--textarea @wrap">
		@content
	</div>
}

@helper TabbedContent(IPublishedContent item)
{
	var tabs = item.GetPropertyValue<IEnumerable<IPublishedContent>>("tabs");
	var title = item.GetPropertyValue("title");
	var wrap = "";

	if( Model.Level == 2 )
	{
	    wrap = "";
	}

	if( tabs != null )
	{
		<div class="c-page-block c-page-block--tabs @wrap">
			@if( title != null && title.ToString() != "" )
			{
			    <h2>@title</h2>
			}
			<div class="c-tab-controls">

				@foreach( var tab in tabs )
				{
					var tabTitle = tab.GetPropertyValue("title");
					var active = "";

					if( tabTitle != null && title.ToString() != "" )
					{
						if( tabTitle.ToString().ToLower().Replace(" ", "") == tabs.First().GetPropertyValue("title").ToString().ToLower().Replace(" ", "") ){
		                    active = "active";
		                }
				       	<button data-tab="#@tabTitle.ToString().ToLower().Replace(" ", "")" class="o-button o-button--small o-button--primary @active">
				            @tabTitle
				        </button>
					}


				}
			</div>
			<div class="c-tab-content">
				@foreach( var tab in tabs )
				{
					var tabTitle = tab.GetPropertyValue("title");
					var content = tab.GetPropertyValue("content");
					var active = "";

					if( tabTitle != null && title.ToString() != "" )
					{
						if( tabTitle.ToString().ToLower().Replace(" ", "") == tabs.First().GetPropertyValue("title").ToString().ToLower().Replace(" ", "") ){
		                    active = "active";
		                }
						<div id="@tabTitle.ToString().ToLower().ToLower().Replace(" ", "")" class="tabs-pane c-tab clearfix @active">
							@content
						</div>
					}
				}
			</div>
		</div>
	}
}

@helper ImageWithText(IPublishedContent item)
{
    var image = item.GetPropertyValue("image");
    var content = item.GetPropertyValue("content");
    var alignment = item.GetPropertyValue("alignment");
    var title = item.GetPropertyValue("title");
	var wrap = "";

	if( Model.Level == 2 )
	{
	    wrap = "";
	}

    if( alignment != null)
    {
    	alignment = alignment.ToString().Replace(" ", "-").ToLower();
    }

	if( image != null || content != null )
	{
		<div class="c-page-block c-page-block--image-text c-page-block--@alignment @wrap clearfix">
				@if( title != null && title.ToString() != "" )
				{
				    <h2 class="clearfix">@title</h2>
				}

				@if( image != null )
				{
					var imageUrl = Umbraco.Media(image.ToString()).Url;
					var caption = Umbraco.Media(image.ToString()).caption;
					var altText = Umbraco.Media(image.ToString()).altText;

				    <figure class="c-float--image c-@alignment">
				    	<a href="@imageUrl?width=1200" title="@altText">
				        	<img src="@imageUrl?width=500" alt="@altText">
				        </a>
				        @if ( caption != "" )
				        {
				            <figcaption>@caption</figcaption>
				        }

				    </figure>
				}

				@if( content != null )
				{
					@content
				}

		</div>
	}
}
@helper Default(IPublishedContent item)
{

}

