@inherits Umbraco.Web.Mvc.UmbracoViewPage
@{
	var selection = Model.GetPropertyValue<IEnumerable<IPublishedContent>>("mainContent");

	int sectionCount = 0;
}

<div class="c-page-nav o-section--bondi-blue">
	<ul class="c-page-nav__list">
		@foreach( var item in selection )
		{
			string docType = item.DocumentTypeAlias;

			switch(docType)
			{
				case "Gallery":
					@Gallery(item, sectionCount)
				break;
				case "Textarea":
					@Textarea(item, sectionCount)
				break;
				case "ImageWithText":
					@ImageWithText(item, sectionCount)
				break;
				case "TabbedContent":
					@TabbedContent(item, sectionCount)
				break;
				case "TwoColumnTextarea":
					@TwoColumnTextarea(item, sectionCount)
				break;
				default:
					@Default(item, sectionCount)
				break;
			}

			sectionCount = sectionCount + 1;
		}
	</ul>
</div>
@helper Gallery(IPublishedContent item, int sectionCount)
{
	var gallery = item.GetPropertyValue<string>("gallery");
    var title = item.GetPropertyValue("title");

	if( Model.Level > 2 )
	{
	}

	if ( !String.IsNullOrEmpty(gallery) )
	{
		if( title != null && title.ToString() != "" )
		{
		    <li class="c-page-nav__item delta"><a href="#@title.ToString().ToLower().Replace(" ", "")">@title</a></li>
		}
	}
}

@helper TabbedContent(IPublishedContent item, int sectionCount)
{
	var tabs = item.GetPropertyValue<IEnumerable<IPublishedContent>>("tabs");
	var title = item.GetPropertyValue("title");

	if( tabs != null )
	{
		if( title != null && title.ToString() != "" )
		{
		    <li class="c-page-nav__item delta"><a href="#@title.ToString().ToLower().Replace(" ", "")">@title</a></li>
		}
	}
}

@helper ImageWithText(IPublishedContent item, int sectionCount)
{
    var image = item.GetPropertyValue("image");
    var content = item.GetPropertyValue("content");
    var title = item.GetPropertyValue("title");

	if( image != null || content != null )
	{
		if( title != null && title.ToString() != "" )
		{
		    <li class="c-page-nav__item delta"><a href="#@title.ToString().ToLower().Replace(" ", "")">@title</a></li>
		}
	}
}

@helper TwoColumnTextarea(IPublishedContent item, int sectionCount)
{
	var title = item.GetPropertyValue("title");

	if( title != null && title.ToString() != "" )
	{
	    <li class="c-page-nav__item delta"><a href="#@title.ToString().ToLower().Replace(" ", "")">@title</a></li>
	}
}

@helper Textarea(IPublishedContent item, int sectionCount)
{
	var title = item.GetPropertyValue("title");

	if( title != null && title.ToString() != "" )
	{
	    <li class="c-page-nav__item delta"><a href="#@title.ToString().ToLower().Replace(" ", "")">@title</a></li>
	}
}

@helper Default(IPublishedContent item, int sectionCount)
{

}

